server:
  port: 8081

spring:
  application:
    name: product-service
  datasource:
    url: jdbc:mysql://localhost:3306/spring_cloud_ecosystem_side_project
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate.hibernate.format_sql: true
  sql:
    init:
      mode: always
      schema-locations: ${SPRING_SQL_SCHEMA_LOCATIONS:classpath:schema.sql}
      data-locations: ${SPRING_SQL_DATA_LOCATIONS:classpath:data.sql}
  cloud:
    config:
      name: test
    bus:
      destination: ${SPRING_CLOUD_BUS_DESTINATION:bus-topic}
  config:
    import: ${SPRING_CONFIG_IMPORT:optional:configserver:http://localhost:8888}
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:http://localhost:9092}

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, busrefresh, prometheus
  tracing:
    sampling:
      probability: 1.0
    propagation:
      type: b3
  zipkin:
    tracing:
      endpoint: ${MANAGEMENT_ZIPKIN_TRACING_ENDPOINT:http://localhost:9411/api/v2/spans}

logging:
  pattern:
    correlation: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

redis:
  address: ${REDIS_ADDRESS:redis://localhost:6379}
  connection.pool.size: ${REDIS_CONNECTION_POOL_SIZE:64}
  connection.minimum.idle.size: ${REDIS_CONNECTION_MINIMUM_IDLE_SIZE:10}
  password: ${REDIS_PASSWORD:}
