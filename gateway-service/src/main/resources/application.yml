server:
  port: 5500

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      default-filters:
        - name: MyGlobalFilter
          args:
            preFilter: true
            postFilter: true
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
#          uri: http://localhost:8080
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - MyCustomFilter
            - name: MyLoggingFilter
              args:
                baseMessage: MyLoggingFilter start
                preLogger: true
                postLogger: true
            - AuthorizationHeaderFilter
        - id: user-service
          uri: lb://USER-SERVICE
#          uri: http://localhost:8080
          predicates:
            - Path=/user-service/**
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: product-service
          uri: lb://PRODUCT-SERVICE
#          uri: http://localhost:8081
          predicates:
            - Path=/product-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/product-service/(?<segment>.*), /$\{segment}
        - id: order-service
          uri: lb://ORDER-SERVICE
#          uri: http://localhost:8082
          predicates:
            - Path=/order-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

token:
  secret: 94zRKXY5QbDtkS2StVdOkjYpiGdjdYwbD4wclg6pmsPhHCnnDbjUjAAeeg+i20h8c1eoMU+r1xdBOzOsD0Qnyg==