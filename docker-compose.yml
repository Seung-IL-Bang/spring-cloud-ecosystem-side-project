version: '3.8'
services:
  eureka-service:
    image: seungilbang/spring-cloud-ecosystem:eureka
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      - JAVA_OPTS=-Xms512m -Xmx1024m
    networks:
      - spring-cloud-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:9090" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - spring-cloud-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      prometheus:
        condition: service_healthy
    networks:
      - spring-cloud-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      discovery.type: "single-node"
      xpack.security.enabled: "false"
      xpack.security.http.ssl.enabled: "false"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    networks:
      - spring-cloud-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.0
    container_name: logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9600" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - spring-cloud-network

  kibana:
    image: kibana:8.10.1
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - spring-cloud-network

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    restart: always
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:9411/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "9411:9411"
    networks:
      - spring-cloud-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    networks:
      - spring-cloud-network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "bus-topic:1:1"
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092" ]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 10s
    networks:
      - spring-cloud-network

  config-service:
    image: seungilbang/spring-cloud-ecosystem:config
    container_name: config-service
    ports:
      - "8888:8888"
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=http://kafka:9092
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:8888/actuator/health" ]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 10s
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - spring-cloud-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - spring-cloud-network

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: spring_cloud_ecosystem_side_project
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - spring-cloud-network

  user-service:
    image: seungilbang/spring-cloud-ecosystem:user
    container_name: user-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/spring_cloud_ecosystem_side_project
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=http://kafka:9092
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - LOGSTASH_DESTINATION=logstash:5044
    depends_on:
      mysql:
        condition: service_healthy
      config-service:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    networks:
      - spring-cloud-network

  product-service:
    image: seungilbang/spring-cloud-ecosystem:product
    container_name: product-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/spring_cloud_ecosystem_side_project
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - REDIS_ADDRESS=redis://redis:6379
      - REDIS_CONNECTION_POOL_SIZE=64
      - REDIS_CONNECTION_MINIMUM_IDLE_SIZE=10
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=http://kafka:9092
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - LOGSTASH_DESTINATION=logstash:5044
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      config-service:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    networks:
      - spring-cloud-network

  order-service:
    image: seungilbang/spring-cloud-ecosystem:order
    container_name: order-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/spring_cloud_ecosystem_side_project
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=http://kafka:9092
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - LOGSTASH_DESTINATION=logstash:5044
    depends_on:
      mysql:
        condition: service_healthy
      config-service:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    networks:
      - spring-cloud-network

  payment-service:
    image: seungilbang/spring-cloud-ecosystem:payment
    container_name: payment-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/spring_cloud_ecosystem_side_project
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=http://kafka:9092
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - LOGSTASH_DESTINATION=logstash:5044
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - spring-cloud-network

  delivery-service:
    image: seungilbang/spring-cloud-ecosystem:delivery
    container_name: delivery-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/spring_cloud_ecosystem_side_project
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=http://kafka:9092
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - LOGSTASH_DESTINATION=logstash:5044
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - spring-cloud-network

  gateway-service:
    image: seungilbang/spring-cloud-ecosystem:gateway
    container_name: gateway-service
    ports:
      - "5500:5500"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      zipkin:
        condition: service_healthy
    networks:
      - spring-cloud-network

networks:
  spring-cloud-network:
    driver: bridge
