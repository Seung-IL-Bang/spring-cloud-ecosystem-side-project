server:
  port: 8080

spring:
  application:
    name: user-service
  datasource:
    url: jdbc:mysql://localhost:3306/spring_cloud_ecosystem_side_project
    username: root
    password: 1234
    driver-class-name: com.mysql.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  profiles:
    active: default
  cloud:
    config:
      name: test
    bus:
      destination: ${SPRING_CLOUD_BUS_DESTINATION:bus-topic}
  config:
    import: ${SPRING_CONFIG_IMPORT:optional:configserver:http://localhost:8888}
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:http://localhost:9092}

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
        defaultZone: http://localhost:8761/eureka/ # Prod ???? ??? ???? ?????.

logging:
  level:
    com.project.user_service.feign: DEBUG
  pattern:
    correlation: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

token:
  expiration_time: 86400000
  secret: 94zRKXY5QbDtkS2StVdOkjYpiGdjdYwbD4wclg6pmsPhHCnnDbjUjAAeeg+i20h8c1eoMU+r1xdBOzOsD0Qnyg==

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, info, beans, busrefresh
  tracing:
    sampling:
      probability: 1.0
    propagation:
      type: b3
  zipkin:
    tracing:
      endpoint: ${MANAGEMENT_ZIPKIN_TRACING_ENDPOINT:http://localhost:9411/api/v2/spans}

